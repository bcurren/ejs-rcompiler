module Ejs
  grammar Grammar
    rule program
      content* {
        def compile(template_name, array = false)
          results = []
          
          # Append function header
          results.push <<-EOF
            #{template_name}.template = function(options) {
              var p = [];
              with(options) { 
          EOF
          
          # Append function body
          elements.each do |element|
            value = element.text_value
            results.push(value) if value
          end
          
          # Append function footer
          results.push <<-EOF
              }
              return out.join('');
            }
          EOF
          
          array ? results : results.join("\n")
        end
      }
    end
  
    rule content
      output_content / comment / execute_content / static_content
    end
  
    rule static_content
       (right_delimeter_escaped / left_delimeter_escaped / unescaped_static_content)+ {
         def text_value
           results = []
           elements.each do |element|
             results.push(element.text_value)
           end
           "p.push('#{results.join('')}');"
         end
       }
    end
    
    rule unescaped_static_content
      (!'<%%' !'%%>' !'<%' !'%>' .)+
    end
  
    rule execute_content
      '<%' tag_content '%>' {
        def text_value
          tag_content.text_value
        end
      }
    end
  
    rule output_content
      '<%=' tag_content '%>' {
        def text_value
          "p.push(#{tag_content.text_value.strip});"
        end
      }
    end
  
    rule comment
      '<%#' tag_content '%>' {
        def text_value
          "/* #{tag_content.text_value} */"
        end
      }
    end
  
    rule tag_content
      (right_delimeter_escaped / left_delimeter_escaped / unescape_content)* {
        def text_value
          results = []
          elements.each do |element|
            results.push(element.text_value)
          end
          results.join("")
        end
      }
    end
    
    rule unescape_content
      (!'%>' !'%%>' !'<%%' .)+
    end
    
    rule right_delimeter_escaped
      '%%>' {
        def text_value
          '%>'
        end
      }
    end
    
    rule left_delimeter_escaped
      '<%%' {
        def text_value
          '<%'
        end
      }
    end
  end
end
